{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useEffect } from \"react\";\nimport { RestAPI } from \"../../Services/RestAPI\";\nimport AssignCollectorList from \"./Lists/AssignCollectorList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AssignCollectorScreen() {\n  var _RestAPI = RestAPI(),\n    _RestAPI2 = _slicedToArray(_RestAPI, 7),\n    sendRequest = _RestAPI2[0],\n    assignCollector = _RestAPI2[1],\n    loading = _RestAPI2[2],\n    error = _RestAPI2[3],\n    client_user = _RestAPI2[4],\n    reseller_user = _RestAPI2[5],\n    collector_user = _RestAPI2[6];\n  useEffect(function () {\n    sendRequest({\n      method: 'GET',\n      url: \"http://192.168.1.6:8080/collector\"\n    });\n  }, []);\n  var navigation = useNavigation();\n  var handleSendButton = function handleSendButton(collectorId) {\n    console.log('Clicked collector ID:', collectorId);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Assign Collector\"\n      }), _jsx(Text, {\n        style: styles.subheader,\n        children: \"Prioritize your deals by assigning collectors to borrowers whom you have lent to.\"\n      }), _jsx(FlatList, {\n        style: {\n          height: '56%',\n          paddingVertical: 5,\n          marginTop: 12,\n          marginBottom: 17\n        },\n        data: client_user,\n        keyExtractor: function keyExtractor(collector) {\n          return collector.collector_id.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var collector = _ref.item;\n          return _jsx(AssignCollectorList, {\n            collector_id: collector.collector_id,\n            collectorname: collector.fullName,\n            collectoraddress: collector.address,\n            onSend: handleSendButton\n          });\n        }\n      }), _jsxs(Text, {\n        style: styles.reminder,\n        children: [_jsx(Ionicons, {\n          name: \"checkmark-circle\",\n          color: \"#8FC152\",\n          size: 15\n        }), \"  Select only available collectors.\"]\n      }), _jsxs(Text, {\n        style: styles.reminder,\n        children: [_jsx(Ionicons, {\n          name: \"checkmark-circle\",\n          color: \"#8FC152\",\n          size: 15\n        }), \"  Make sure to assign collectors with relevant expertise to the task.\"]\n      }), _jsxs(Text, {\n        style: styles.reminder,\n        children: [_jsx(Ionicons, {\n          name: \"close-circle\",\n          color: \"#97231E\",\n          size: 15\n        }), \"   Please review before assigning a collector for this task.\"]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Back\"\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    height: '100%',\n    paddingVertical: 138,\n    paddingHorizontal: 26\n  },\n  header: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#203949'\n  },\n  subheader: {\n    fontSize: 18,\n    color: '#707070',\n    flexWrap: 'wrap'\n  },\n  reminder: {\n    paddingHorizontal: 15,\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    height: 48,\n    backgroundColor: '#2C85E7',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 5,\n    marginTop: 100\n  },\n  button: {\n    borderRadius: 10,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["Ionicons","useNavigation","useEffect","RestAPI","AssignCollectorList","jsx","_jsx","jsxs","_jsxs","AssignCollectorScreen","_RestAPI","_RestAPI2","_slicedToArray","sendRequest","assignCollector","loading","error","client_user","reseller_user","collector_user","method","url","navigation","handleSendButton","collectorId","console","log","SafeAreaView","style","styles","container","children","View","Text","header","subheader","FlatList","height","paddingVertical","marginTop","marginBottom","data","keyExtractor","collector","collector_id","toString","renderItem","_ref","item","collectorname","fullName","collectoraddress","address","onSend","reminder","name","color","size","buttonContainer","Pressable","button","onPress","goBack","buttonLabel","StyleSheet","create","width","paddingHorizontal","fontSize","fontWeight","flexWrap","alignItems","backgroundColor","justifyContent","borderRadius","flexDirection"],"sources":["/Users/keithdoesmedia/Code/GitHub/capstone-v1/src/Components/Reseller/AssignCollector.tsx"],"sourcesContent":["import { SafeAreaView,View,  StyleSheet, Text, ScrollView, Pressable, Button, FlatList } from \"react-native\";\nimport {Ionicons} from '@expo/vector-icons'; \nimport { RouteProp, useRoute, useNavigation } from \"@react-navigation/native\";\nimport { CheckScreenNavigationprop, RootStackParamList } from \"../../../App\";\nimport { Key, useEffect, useState } from \"react\";\nimport { ICollector, RestAPI } from \"../../Services/RestAPI\";\nimport { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport AssignCollectorList from \"./Lists/AssignCollectorList\";\n\n/*\nconst availableCollectors = [\n    {\n        collectorname: \"John Doe\", \n        collectoraddress: \"Cebu City\"\n    }, \n    {\n        collectorname: \"John Doe\", \n        collectoraddress: \"Cebu City\"\n    }, \n    {\n        collectorname: \"John Doe\", \n        collectoraddress: \"Cebu City\"\n    }, \n    {\n        collectorname: \"John Doe\", \n        collectoraddress: \"Cebu City\"\n    }, \n    {\n        collectorname: \"John Doe\", \n        collectoraddress: \"Cebu City\"\n    }, \n    {\n        collectorname: \"John Doe\", \n        collectoraddress: \"Cebu City\"\n    }, \n    {\n        collectorname: \"John Doe\", \n        collectoraddress: \"Cebu City\"\n    }, \n\n]\n*/\n/*\ninterface RouteProps{\n    route: {params: {otherParam:string}}; \n}\n\ntype AssignCollectorProps = NativeStackScreenProps<RootStackParamList, 'AssignCollector'>;\n//type AssignCollectorProps = RouteProp<RootStackParamList, 'AssignCollector'>;\n\n/*\ntype AssignCollectorProps = {\n    route: RouteProp<RootStackParamList, 'AssignCollector'>\n}*/\n\n\n\n\n\n\n\n//naa ni siyay parameter dapat (client_id)\nexport default function AssignCollectorScreen(){\n\n    const [sendRequest, assignCollector, loading, error,client_user, reseller_user, collector_user] = RestAPI(); \n    useEffect(() => {\n        sendRequest({ \n            method: 'GET', \n            url: \"http://192.168.1.6:8080/collector\"\n        })\n    },[] )\n\n    const navigation = useNavigation<CheckScreenNavigationprop>(); \n    \n    //Function to receive the collector ID that is mapped on the Flatlist\n    const handleSendButton = (collectorId: number) => {\n        // Do something with the collector ID\n        console.log('Clicked collector ID:', collectorId);\n      };\n\n      \n    return(\n        <SafeAreaView style={styles.container}>\n            <View>\n                <Text style={styles.header}>Assign Collector</Text>\n                <Text style={styles.subheader} >Prioritize your deals by assigning collectors to borrowers whom you have lent to.</Text>\n\n                \n\n                <FlatList\n                    style={{height: '56%', paddingVertical: 5, marginTop: 12, marginBottom: 17}}\n                    data={client_user}\n                    keyExtractor={(collector: ICollector) => collector.collector_id.toString()}\n                    renderItem={({ item: collector}) => (\n                        \n                        <AssignCollectorList collector_id={collector.collector_id} collectorname={collector.fullName} collectoraddress={collector.address} onSend={handleSendButton}/>\n\n                    )}\n                />\n\n                \n                <Text style={styles.reminder}><Ionicons name=\"checkmark-circle\" color='#8FC152' size={15}/>  Select only available collectors.</Text>\n                <Text style={styles.reminder}><Ionicons name=\"checkmark-circle\" color='#8FC152' size={15}/>  Make sure to assign collectors with relevant expertise to the task.</Text>\n                <Text style={styles.reminder}><Ionicons name=\"close-circle\" color='#97231E' size={15}/>   Please review before assigning a collector for this task.</Text>\n                \n                <View style={styles.buttonContainer}>\n                    <Pressable style={styles.button} onPress={()=>navigation.goBack()}>\n                        <Text style={styles.buttonLabel}>Back</Text>\n                    </Pressable>\n                </View>    \n\n            </View>\n            \n        </SafeAreaView>\n        \n    ); \n\n}\n\n\n\n\nconst styles = StyleSheet.create({\n    container:{\n        width: '100%', \n        height: '100%', \n        paddingVertical: 138, \n        paddingHorizontal: 26\n    },\n    header:{\n        fontSize: 32,\n        fontWeight: 'bold',\n        color: '#203949'\n    }, \n    subheader:{\n        fontSize: 18, \n        color: '#707070', \n        flexWrap: 'wrap', \n\n    }, \n    reminder:{\n        paddingHorizontal: 15, \n        flexWrap: 'wrap', \n        alignItems:'center'\n    }, \n    buttonContainer:{ \n        height: 48, \n        backgroundColor: '#2C85E7',\n        alignItems: 'center', \n        justifyContent: 'center', \n        borderRadius: 5, \n        marginTop: 100\n    }, \n\n    button:{\n        borderRadius: 10 ,\n        width: '100%', \n        height: '100%', \n        alignItems: 'center', \n        justifyContent: 'center', \n        flexDirection: 'row'\n    },\n\n    buttonLabel:{\n        color: '#fff', \n        fontWeight: 'bold'\n    },\n})\n\n\n\n\n/*\n//<ScrollView alwaysBounceVertical={false} style={{height: '56%', paddingVertical: 5, marginTop: 12, marginBottom: 17}}>\n\n                {\n                    availableCollectors.map((item, index)=>{\n                        return <AssignCollectorList key={index} collectorname={item.collectorname} collectoraddress={item.collectoraddress}/>; \n                    })\n                }\n\n                */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}