{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nexport var RestAPI = function RestAPI() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    error = _useState4[0],\n    setError = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    target_user = _useState6[0],\n    setUser = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    target_dues = _useState8[0],\n    setDues = _useState8[1];\n  function sendRequest(config) {\n    setLoading(true);\n    axios(config).then(function (response) {\n      setError('');\n      console.log(response);\n      setUser(response.data);\n      setDues(response.data);\n    }).catch(function (error) {\n      setError(error.message);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  }\n  return [sendRequest, loading, error, target_user];\n};","map":{"version":3,"names":["axios","useState","RestAPI","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","target_user","setUser","_useState7","_useState8","target_dues","setDues","sendRequest","config","then","response","console","log","data","catch","message","finally"],"sources":["C:/Users/User/Documents/GitHub/Capstone/capstone-v1/src/Services/RestAPI.tsx"],"sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport interface IUser {\r\n    userId: number, \r\n    username: string, \r\n    password: string,\r\n    email:string, \r\n\r\n}\r\n\r\nexport interface IDuePayments{\r\n    itemName: string; \r\n    itemCollectibles: number; \r\n    status: boolean\r\n}\r\n\r\nexport const RestAPI = (): [(config: AxiosRequestConfig<any>) => void, boolean, string, IUser | any] => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [target_user, setUser] = useState<IUser[]>(); \r\n    const [target_dues, setDues] = useState<IDuePayments[]>(); \r\n\r\n\r\n    function sendRequest(config: AxiosRequestConfig<any>) {\r\n        setLoading(true);\r\n\r\n        axios(config)\r\n            .then((response) => {\r\n                setError('');\r\n                console.log(response);\r\n                setUser(response.data); //YOU NEED TO ADD THIS TO PUT ALL RESPONSES TO THE USESTATE\r\n                setDues(response.data)\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message);\r\n            })\r\n            .finally(() => setLoading(false))\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return [sendRequest, loading, error, target_user];\r\n\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAA8B,OAAO;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAiBhC,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAoF;EACpG,IAAAC,SAAA,GAA8BF,QAAQ,CAAC,KAAK,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA0BP,QAAQ,CAAC,EAAE,CAAC;IAAAQ,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA+BX,QAAQ,CAAU,CAAC;IAAAY,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA3CE,WAAW,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAC3B,IAAAG,UAAA,GAA+Bf,QAAQ,CAAiB,CAAC;IAAAgB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAlDE,WAAW,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAG3B,SAASG,WAAWA,CAACC,MAA+B,EAAE;IAClDd,UAAU,CAAC,IAAI,CAAC;IAEhBP,KAAK,CAACqB,MAAM,CAAC,CACRC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAChBZ,QAAQ,CAAC,EAAE,CAAC;MACZa,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBR,OAAO,CAACQ,QAAQ,CAACG,IAAI,CAAC;MACtBP,OAAO,CAACI,QAAQ,CAACG,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAC,UAACjB,KAAK,EAAK;MACdC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;IAC3B,CAAC,CAAC,CACDC,OAAO,CAAC;MAAA,OAAMtB,UAAU,CAAC,KAAK,CAAC;IAAA,EAAC;EACzC;EAMA,OAAO,CAACa,WAAW,EAAEd,OAAO,EAAEI,KAAK,EAAEI,WAAW,CAAC;AAErD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}