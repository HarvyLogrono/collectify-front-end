{"ast":null,"code":"import { useNavigation } from '@react-navigation/native';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SendCollectorsList(props) {\n  var navigation = useNavigation();\n  var gotoAssignCollector = function gotoAssignCollector() {\n    navigation.navigate('AssignCollector', {\n      otherParam1: props.client_id\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.item,\n    children: _jsxs(View, {\n      style: styles.itemLeft,\n      children: [_jsx(View, {\n        style: styles.square\n      }), _jsxs(View, {\n        style: styles.itemText,\n        children: [_jsx(Text, {\n          style: {\n            color: '#363636'\n          },\n          children: props.fullname\n        }), _jsx(Text, {\n          style: {\n            color: '#92A0A8'\n          },\n          children: \"Php 2500\"\n        })]\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(Pressable, {\n          style: styles.button,\n          onPress: gotoAssignCollector,\n          children: _jsx(Text, {\n            style: styles.buttonLabel,\n            children: \"Send\"\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  item: {\n    backgroundColor: '#F5F7F9',\n    padding: 21,\n    borderRadius: 10,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    elevation: 2\n  },\n  itemLeft: {\n    flexDirection: 'row',\n    aligntItems: 'center',\n    flexWrap: 'wrap'\n  },\n  square: {\n    width: 40,\n    height: 40,\n    backgroundColor: '#92A0A8',\n    borderRadius: 5,\n    marginRight: 15\n  },\n  itemText: {\n    maxWidth: '80%'\n  },\n  buttonContainer: {\n    width: 65,\n    height: 40,\n    backgroundColor: '#2C85E7',\n    marginLeft: 50,\n    justifyContent: 'space-evenly',\n    borderRadius: 5\n  },\n  button: {\n    borderRadius: 10,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontSize: 12\n  }\n});","map":{"version":3,"names":["useNavigation","SafeAreaView","View","Text","StyleSheet","Pressable","jsx","_jsx","jsxs","_jsxs","SendCollectorsList","props","navigation","gotoAssignCollector","navigate","otherParam1","client_id","style","styles","item","children","itemLeft","square","itemText","color","fullname","buttonContainer","button","onPress","buttonLabel","create","backgroundColor","padding","borderRadius","marginBottom","shadowColor","shadowOffset","width","height","shadowRadius","elevation","flexDirection","aligntItems","flexWrap","marginRight","maxWidth","marginLeft","justifyContent","alignItems","fontSize"],"sources":["/Users/keithdoesmedia/Code/GitHub/capstone-v1/src/Components/Reseller/Lists/SendCollectorsList.tsx"],"sourcesContent":["import { RouteProp, useNavigation } from '@react-navigation/native';\nimport {SafeAreaView, View, Text, StyleSheet, Pressable, GestureResponderEvent} from 'react-native'\nimport { CheckScreenNavigationprop, RootStackParamList } from '../../../../App';\nimport { NativeStackScreenProps } from '@react-navigation/native-stack';\n\ntype SendCollectorListProps = {\n    client_id: number,\n    fullname: String, \n    //requiredCollectible: number\n}\n\n\nexport default function SendCollectorsList(props: SendCollectorListProps){\n    const navigation = useNavigation<CheckScreenNavigationprop>(); \n\n    //function to navigate to AssignCollectorScreen and pass data\n    const gotoAssignCollector = () => {\n        navigation.navigate('AssignCollector', {otherParam1:props.client_id});\n    }\n\n    return(\n        <SafeAreaView style={styles.item}>\n            <View style={styles.itemLeft}>\n                <View style={styles.square}/>\n                    <View style={styles.itemText}>\n                        <Text style={{color:'#363636'}}>{props.fullname}</Text>\n                        <Text style={{color: '#92A0A8'}}>Php 2500</Text>                                  \n                    </View>\n                <View style={styles.buttonContainer}>\n                    <Pressable style={styles.button} onPress={gotoAssignCollector}>\n                        <Text style={styles.buttonLabel}>Send</Text>\n                    </Pressable>\n                </View>\n            </View>\n            \n        </SafeAreaView>\n    );\n}\n\nconst styles = StyleSheet.create({\n    item:{\n        backgroundColor: '#F5F7F9',\n        padding: 21, \n        borderRadius: 10, \n        marginBottom: 20,\n        shadowColor: '#000', \n        shadowOffset: {\n            width:0,\n            height: 2,\n        },\n        shadowRadius: 4,\n        elevation: 2\n    },\n    itemLeft:{\n        flexDirection:'row',\n        aligntItems: 'center', \n        flexWrap:'wrap'\n    },\n    square:{\n        width: 40,\n        height: 40,\n        backgroundColor: '#92A0A8', \n        borderRadius: 5,\n        marginRight: 15, \n    }, \n    itemText: {\n        maxWidth: '80%', \n    }, \n    buttonContainer: {\n        width: 65, \n        height: 40,\n        backgroundColor:'#2C85E7',\n        marginLeft: 50,\n        justifyContent:'space-evenly',\n        borderRadius: 5\n    }, \n    button:{\n        borderRadius: 10 ,\n        width: '100%', \n        height: '100%', \n        alignItems: 'center', \n        justifyContent: 'center', \n        flexDirection: 'row'\n    },\n    buttonLabel:{\n        color: '#fff', \n        fontSize: 12\n    },\n}); \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}